---
name: build

on:
  push:
    branches:
      - main
    tags:
      - "v*"

env:
  IMAGE_NAME: ednxzu/keepalived
  BUILD_PLATFORMS: linux/amd64
  KEEPALIVED_VERSION: "2.2.3"

jobs:
  define:
    runs-on: ubuntu-latest
    outputs:
      version_matrix: ${{ steps.docker-build-matrix.outputs.version_matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: docker-build-versions
        name: Set build versions
        run: |
          build_versions='2.2.8,2.2.7,2.2.4,2.2.3,2.1.5,2.1.4,2.1.3,2.1.2,2.1.1,2.1.0,2.0.20,2.0.19,2.0.18,2.0.17,2.0.16,2.0.15,2.0.14,2.0.13'
          echo "build_targets=$build_versions" >> "$GITHUB_OUTPUT"

      - id: docker-build-matrix
        name: Generate docker build matrix
        uses: ednz-cloud/docker-matrix-generator@main
        with:
          versions: "${{ steps.docker-build-versions.outputs.build_targets }}"

      - name: Print matrix
        run: |
          echo "$CONTENT"
        env:
          CONTENT: ${{ steps.docker-build-matrix.outputs.version_matrix }}

  publish:
    runs-on: ubuntu-latest
    needs: define
    strategy:
      matrix: ${{ needs.define.outputs.version_matrix }}
    steps:
      - name: Print version
        run: echo ${{ matrix.version }}

      - name: Print is_latest
        run: echo ${{ matrix.is_latest }}

      - name: Print is_latest_major
        run: echo ${{ matrix.is_latest_major }}

      - name: Print is_latest_minor
        run: echo ${{ matrix.is_latest_minor }}

      # - name: Checkout
      #   uses: actions/checkout@v4

      # - name: Setup buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Setup QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Login to container registry
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: prepare metadata
      #   id: metadata
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ env.IMAGE_NAME }}
      #     flavor: |
      #       latest=auto
      #     labels: |
      #       org.opencontainers.image.authors=${{ github.repository_owner }}
      #       org.opencontainers.image.created=${{ needs.prepare.outputs.date }}
      #       org.opencontainers.image.url=${{ github.event.repository.html_url }}
      #       org.opencontainers.image.documentation=${{ github.event.repository.html_url }}
      #       org.opencontainers.image.source=${{ github.event.repository.html_url }}
      #       org.opencontainers.image.version=${{ env.KEEPALIVED_VERSION }}
      #     tags: |
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}
      #       type=semver,pattern={{major}}
      #       type=ref,event=pr
      #       type=sha

      # - name: build and push
      #   id: build-and-push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: ${{ (github.event_name != 'pull_request') || (env.FORCE_PUBLISH == 'true') }}
      #     tags: ${{ steps.metadata.outputs.tags }}
      #     labels: ${{ steps.metadata.outputs.labels }}
      #     platforms: ${{ env.BUILD_PLATFORMS }}
      #     build-args: KEEPALIVED_VERSION=${{ env.KEEPALIVED_VERSION }}
